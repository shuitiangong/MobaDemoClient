// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattlePB.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace ProtoMsg {

  #region Messages
  public sealed class BattleUserInputC2S : pb::IMessage {
    private static readonly pb::MessageParser<BattleUserInputC2S> _parser = new pb::MessageParser<BattleUserInputC2S>(() => new BattleUserInputC2S());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleUserInputC2S> Parser { get { return _parser; } }

    /// <summary>Field number for the "RolesID" field.</summary>
    public const int RolesIDFieldNumber = 1;
    private int rolesID_;
    /// <summary>
    ///角色ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RolesID {
      get { return rolesID_; }
      set {
        rolesID_ = value;
      }
    }

    /// <summary>Field number for the "RoomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private int roomID_;
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private int key_;
    /// <summary>
    ///键码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "MousePosition" field.</summary>
    public const int MousePositionFieldNumber = 4;
    private global::ProtoMsg.V3Info mousePosition_;
    /// <summary>
    ///鼠标位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.V3Info MousePosition {
      get { return mousePosition_; }
      set {
        mousePosition_ = value;
      }
    }

    /// <summary>Field number for the "LockTag" field.</summary>
    public const int LockTagFieldNumber = 5;
    private string lockTag_ = "";
    /// <summary>
    ///锁定的标签
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LockTag {
      get { return lockTag_; }
      set {
        lockTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LockID" field.</summary>
    public const int LockIDFieldNumber = 6;
    private int lockID_;
    /// <summary>
    ///锁定的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LockID {
      get { return lockID_; }
      set {
        lockID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RolesID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RolesID);
      }
      if (RoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomID);
      }
      if (Key != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Key);
      }
      if (mousePosition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MousePosition);
      }
      if (LockTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LockTag);
      }
      if (LockID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LockID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RolesID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RolesID);
      }
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (mousePosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MousePosition);
      }
      if (LockTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LockTag);
      }
      if (LockID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LockID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RolesID = input.ReadInt32();
            break;
          }
          case 16: {
            RoomID = input.ReadInt32();
            break;
          }
          case 24: {
            Key = input.ReadInt32();
            break;
          }
          case 34: {
            if (mousePosition_ == null) {
              mousePosition_ = new global::ProtoMsg.V3Info();
            }
            input.ReadMessage(mousePosition_);
            break;
          }
          case 42: {
            LockTag = input.ReadString();
            break;
          }
          case 48: {
            LockID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class BattleUserInputS2C : pb::IMessage {
    private static readonly pb::MessageParser<BattleUserInputS2C> _parser = new pb::MessageParser<BattleUserInputS2C>(() => new BattleUserInputS2C());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleUserInputS2C> Parser { get { return _parser; } }

    /// <summary>Field number for the "CMD" field.</summary>
    public const int CMDFieldNumber = 1;
    private global::ProtoMsg.BattleUserInputC2S cMD_;
    /// <summary>
    ///用户的输入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.BattleUserInputC2S CMD {
      get { return cMD_; }
      set {
        cMD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cMD_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CMD);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cMD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CMD);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cMD_ == null) {
              cMD_ = new global::ProtoMsg.BattleUserInputC2S();
            }
            input.ReadMessage(cMD_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
